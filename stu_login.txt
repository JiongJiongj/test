package sy;

import java.awt.Font;
import java.awt.GridLayout;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

public class stu_login extends JFrame implements ActionListener{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	JPanel jp1,jp2,jp3,jp4;
	JLabel jlb1,jlb2,jlb3;
	JButton jb1,jb2,jb3;
	JTextField jtf=new JTextField(10);
	JPasswordField jpf=new JPasswordField(10);
	
	public stu_login(){
		jp1=new JPanel();
		jp2=new JPanel();
		jp3=new JPanel();
		jp4=new JPanel();
		jlb1=new JLabel("管理员登陆");
		jlb2=new JLabel("用户名");
		jlb3=new JLabel("密    码");
	    Font m=new Font("TimesRoman",Font.BOLD,25);
	    jlb1.setFont(m);
	    Font m1=new Font("TimesRoman",Font.BOLD,20);
	    jlb2.setFont(m1);
	    jlb3.setFont(m1);
	   
	    jb1=new JButton("确定");
		jb1.addActionListener(this);
		jb2=new JButton("置空");
		jb2.addActionListener(this);
		jb3=new JButton("返回");
		jb3.addActionListener(this);
		jpf.setEchoChar('*');
		jpf.addActionListener(this);
		jp1.add(jlb1);
		
		jp2.add(jlb2);
		jp2.add(jtf);
		
		jp3.add(jlb3);
		jp3.add(jpf);
		
		jp4.add(jb1);
		jp4.add(jb2);
		jp4.add(jb3);
		
		this.add(jp1);
		this.add(jp2);
		this.add(jp3);
		this.add(jp4);
		this.setTitle("登陆界面");
		this.setSize(600,300);
		this.setLocationRelativeTo(null);
		this.setResizable(true);
		this.setVisible(true);
		this.setLayout(new GridLayout(4,1));
	}
	public void clear() {
		jtf.setText("");
		jpf.setText("");
	}
	//login方法里要进行用户名与密码的匹配
	public void login() throws HeadlessException, SQLException {
		String psw = GETSQL.querystu(jtf.getText());
		if (psw==null) {
			JOptionPane.showMessageDialog(null, "此用户不存在","提示消息",JOptionPane.WARNING_MESSAGE);
			this.clear();
		} 
		else if ((String.valueOf(jpf.getPassword()).equals(psw))) {	
		//else if (jpf.equals(psw)) {			
			JOptionPane.showMessageDialog(null, "登陆成功！","提示消息",JOptionPane.WARNING_MESSAGE);
			dispose();
			new stu_select();
		}
		/*else if(String.valueOf(jpf.getPassword()).isEmpty()) {
			JOptionPane.showMessageDialog(null, "请输入密码","提示消息",JOptionPane.WARNING_MESSAGE);
			this.clear();
		}
		else if(jtf.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "请输入用户名","提示消息",JOptionPane.WARNING_MESSAGE);
			this.clear();
		}
		else if(String.valueOf(jpf.getPassword()).isEmpty()&&jtf.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "请输入用户名和密码","提示消息",JOptionPane.WARNING_MESSAGE);
			this.clear();
		}
		*/
		else {
			JOptionPane.showMessageDialog(null, "用户名或者密码错误！","提示消息",JOptionPane.WARNING_MESSAGE);
			this.clear();
		}
	}
	public void actionPerformed(ActionEvent e){
		if (e.getActionCommand()=="确定")
		{
			if(!(String.valueOf(jpf.getPassword()).isEmpty())&&!(jtf.getText().isEmpty())) {
				GETSQL.ConnectSQL();//连接数据库
				try {
				  this.login();
				} catch (SQLException e1) {
					// TODO Auto-generated catch block				
					e1.printStackTrace();
				}
			}
			else if(jtf.getText().isEmpty()) {
				JOptionPane.showMessageDialog(null, "请输入用户名","提示消息",JOptionPane.WARNING_MESSAGE);
				this.clear();
			}
			else if(String.valueOf(jpf.getPassword()).isEmpty()) {
				JOptionPane.showMessageDialog(null, "请输入密码","提示消息",JOptionPane.WARNING_MESSAGE);
				this.clear();
			}
		}
		else if (e.getActionCommand()=="置空")
		{
			this.clear();
		}
		else if (e.getActionCommand()=="返回")
		{
			this.dispose();
		}
	}

	public static void main(String[] args) {
		new stu_login();
	}
}


